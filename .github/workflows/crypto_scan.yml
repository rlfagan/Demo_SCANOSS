name: SCANOSS SBOM SCANNER

on:
  push:
    branches:
      - '*'

jobs:
  generate-sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker Registry
        if: env.DOCKER_AUTH_REQUIRED == 'true'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Generate SBOM and Extract PURLs
        run: |
          docker pull ghcr.io/scanoss/scanoss-py:v1.19.0
          docker run --rm -v $(pwd):/scanoss ghcr.io/scanoss/scanoss-py:v1.19.0 scan ./ --key txnUfW0xwF0KI1U1RW5sDSBL -o results.json
          
          echo "Extracting PURLs to purls.json..."
          jq '{purls: [.components[]?.purl // empty | {purl: .}]}' results.json > purls.json
          echo "PURLs JSON file created with $(jq '.purls | length' purls.json) PURLs."

      - name: Upload SBOM and PURLs JSON as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scanoss-results
          path: ./results.json

      - uses: actions/upload-artifact@v4
        with:
          name: purls-json
          path: ./purls.json

  generate-charts:
    runs-on: ubuntu-latest
    needs: generate-sbom

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download SBOM and PURLs JSON
        uses: actions/download-artifact@v4
        with:
          name: scanoss-results
          path: ./

      - uses: actions/download-artifact@v4
        with:
          name: purls-json
          path: ./

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas tabulate matplotlib kaleido

      - name: Install SCANOSS CLI Tool and Run Batch Scan
        run: |
          pip install scanoss
          echo "Running SCANOSS vulnerability check..."
          scanoss-py comp vu --input ./purls.json --output ./vulnerabilities_summary.json

      - name: Generate Charts and Results Summary
        run: |
          mkdir -p charts
          python scripts/generate_charts.py

      - name: Display Results and Charts in Workflow Summary
        run: |
          if [ -f summary.md ]; then cat summary.md >> $GITHUB_STEP_SUMMARY; fi
          if [ -f vulnerabilities_summary.json ]; then
            jq -r '"## Vulnerabilities Summary\n", (.purls[] | "PURL: " + .purl + ", Vulnerability Count: " + (.vulnerabilities | length | tostring))' vulnerabilities_summary.json >> $GITHUB_STEP_SUMMARY
          fi
